@attribute [StreamRendering]
@using Daedalus_Orbis.Map
@rendermode InteractiveServer
@inject SpriteService spriteService
@inject UXEvents uxEvents



@*<g>
    <polygon Vector2s=@corners id=@tile.Id class="tile" @onmouseover="MouseOver" @onmouseout="MouseOut" @onclick="Click">
        <img src="@spriteSrc"/>
    </polygon>
</g>*@

<div id="@tile.Id" class="tile prevent-select" style="top:@(tile.Center.Y)px; left:@(tile.Center.X)px; width:@(size.X)px; height:@(size.Y)px;">
    <div class="tile-in2" style="background-image:url(@spriteSrc);" @onmouseover="MouseOver" @onmouseout="MouseOut" @onclick="Click">
        <div class="tile-in2 overlay" style="background-image:url(@overlaySrc);">
        </div>
    </div>
</div>



@code {
    [Parameter]
    public string? corners { get; set; }
    [Parameter]
    public TileComponentData? tile { get; set; }
    [Parameter]
    public Vector2 size { get; set; }
    [Parameter]
    public TerrainType TerrainBrush { get; set; } = TerrainType.Plains;

    public Vector2? rectO { get; set; }

    private string? spriteSrc { get; set; }
    private string overlaySrc { get; set; } = "";

    [Parameter]
    public ToolType ActiveToolType { get; set; }


    Vector2 HighLightText = new Vector2(0, 0);

    protected override async Task OnInitializedAsync()
    {
        //rectO = new Vector2(origin.X - 5, origin.Y - 5);

        spriteSrc = spriteService.TerrainSprite(tile.Terrain);
        uxEvents.OnNewTool += UpdateToolType;
    }

    protected void UpdateToolType(ToolType tt)
    {
        ActiveToolType = tt;
    }

    private void Click(MouseEventArgs e)
    {
        if(ActiveToolType == ToolType.Select)
        {
            if (tile.Selected)
            {
                tile.Selected = false;
            }
            else
            {
                tile.Selected = true;
            }
            return;
        }

        if(ActiveToolType == ToolType.Pencil)
        {
            tile.Terrain = TerrainBrush;
            spriteSrc = spriteService.TerrainSprite(tile.Terrain);
        }


        UpdatedSelect();
    }

    void UpdatedSelect()
    {
        if (tile.Selected)
        {
            overlaySrc = "sprites/Select.png";

            if (tile.Highlighted)
            {
                //color = "#FF8080";
            }
        }
        else
        {
            overlaySrc = "";
            if (tile.Highlighted)
            {
                overlaySrc = "sprites/Highlight.png";
            }
        }
    }

    void UpdateHighlight()
    {
        if (tile.Highlighted)
        {
            overlaySrc = "sprites/Highlight.png";
        }
        else
        {
            overlaySrc = "";
            if (tile.Selected)
            {
                overlaySrc = "sprites/Select.png";
            }
        }
    }

    void MouseOver(MouseEventArgs e)
    {
        if (ActiveToolType == ToolType.Brush && e.Buttons == 1)
        {
            tile.Terrain = TerrainBrush;
            spriteSrc = spriteService.TerrainSprite(tile.Terrain);
            tile.Highlighted = true;
            UpdateHighlight();
            return;
        }
        if (ActiveToolType != ToolType.Select)
        {
            tile.Highlighted = true;
            UpdateHighlight();
            return;
        }
        
    }

    void MouseOut(MouseEventArgs e)
    {
        tile.Highlighted = false;
        UpdateHighlight();
    }
}
